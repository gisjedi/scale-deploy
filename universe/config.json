{
  "type": "object",
    "properties": {
      "service": {
        "type": "object",
        "description": "DC/OS service configuration properties",
        "properties": {
          "name": {
            "title": "Service name",
            "description": "Name of this service instance. MUST BE LOWERCASE! Will also be used as a prefix in all supporting services.",
            "type": "string",
            "default": "scale"
          },
          "sleep": {
            "description": "The sleep duration in seconds before tasks exit.",
            "type": "number",
            "default":1000
          },
          "user": {
            "title": "User",
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root"
          },
          "service_account": {
            "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
            "type": "string",
            "default": ""
          },
          "virtual_network_enabled": {
            "description": "Enable virtual networking",
            "type": "boolean",
            "default": false
          },
          "virtual_network_name": {
            "description": "The name of the virtual network to join",
            "type": "string",
            "default": "dcos"
          },
          "virtual_network_plugin_labels": {
            "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
            "type": "string",
            "default": ""
          },
          "service_account_secret": {
            "title": "Credential secret name (optional)",
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string",
            "default": ""
          },
          "log_level": {
            "description": "The log level for the DC/OS service.",
            "type": "string",
            "enum": ["OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL"],
            "default": "INFO"
          }
        },
        "required":[
          "name",
          "sleep",
          "user"
        ]
      },
      "node": {
        "description": "Template pod configuration properties",
        "type": "object",
        "properties": {
          "count": {
            "title": "Node count",
            "description": "Number of Template pods to run",
            "type": "integer",
            "default":1
          },
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Marathon-style placement constraint for nodes. Example: 'hostname:UNIQUE'",
            "type": "string",
            "default": ""
          },
          "cpus": {
            "title": "CPU count",
            "description": "Template pod CPU requirements",
            "type": "number",
            "default":0.1
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Template pod mem requirements (in MB)",
            "type": "integer",
            "default":252
          },
          "disk": {
            "title": "Disk size (MB)",
            "description": "Template pod persistent disk requirements (in MB)",
            "type": "integer",
            "default":25
          },
          "disk_type": {
            "title": "Disk type [ROOT, MOUNT]",
            "description": "Mount volumes require preconfiguration in DC/OS",
            "enum": [
              "ROOT",
              "MOUNT"
            ],
            "default": "ROOT"
          }
        },
        "required":[
          "count",
          "cpus",
          "mem",
          "disk",
          "disk_type"
        ]
      },
      "scale": {
        "properties": {
          "virtual-host": {
            "description": "Virtual Hostname for Marathon-LB webserver exposure outside cluster.",
            "default": "scale.marathon.slave.mesos",
            "type": "string"
          },
          "docker-credentials": {
            "description": "URI to .dockercfg file with Docker credentials for retrieving private images.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "logging":{
        "properties":{
          "cpu": {
            "description": "Allocation of CPU resources for Scale logstash service.",
            "default": 0.1,
            "minimum": 0.1,
            "type": "number"
          },
          "memory": {
            "description": "Allocation of Memory (MiB) resources for Scale logstash service.",
            "default": 256,
            "minimum": 128,
            "type": "number"
          },
          "logstash-address": {
            "description": "Address for logstash service. When left empty logstash will deployed into the cluster.",
            "type": "string"
          },
          "elasticsearch-urls": {
            "description": "ElasticSearch URL's for Scale. Note: Not needed if you use DCOS ElasticSearch package.",
            "type": "string"
          },
          "elasticsearch-lb": {
            "description": "Boolean (true/false) indicating whether your Elasticsearch instances is behind a load balancer. This should also be set to true if using a single Elasticsearch instance.",
            "type": "boolean",
            "default": false
          }
        }
      },
      "webserver":{
        "properties":{
          "cpu": {
            "description": "Allocation of CPU resources for Scale web server.",
            "default": 1,
            "minimum": 0.1,
            "type": "number"
          },
          "memory": {
            "description": "Allocation of Memory (MiB) resources for Scale web server.",
            "default": 512,
            "minimum": 128,
            "type": "number"
          }
        }
      },
      "messaging":{
        "properties":{
          "broker-url": {
            "description": "URL to message broker in Kombu connection format. When left empty, RabbitMQ will be deployed into the cluster. THIS DEFAULT SHOULD NEVER BE USED FOR PRODUCTION!",
            "type": "string"
          }
        }
      },
      "dcos":{
        "properties":{
          "service-token": {
            "description": "DCOS service token for deployment of supporting Marathon apps. Normally needed, unless DCOS is in disabled security mode.",
            "type": "string"
          }
        }
      },
      "db": {
        "properties":{
          "cpu": {
            "description": "Allocation of CPU resources for Scale database. ONLY FOR DEVELOPMENT SERVER!",
            "default": 0.1,
            "minimum": 0.1,
            "type": "number"
          },
          "db-host": {
            "description": "Hostname to the database server. When left empty a sample database will be deployed. THIS DEFAULT SHOULD NEVER BE USED FOR PRODUCTION!",
            "type": "string"
          },
          "db-name": {
            "description": "DB Name. This database must have the postgis extension already installed.",
            "default": "scale",
            "type": "string"
          },
          "db-port": {
            "description": "DB Port",
            "default": 5432,
            "type": "integer"
          },
          "db-user": {
            "description": "DB User",
            "default": "scale",
            "type": "string"
          },
          "db-pass": {
            "description": "DB Pass",
            "default": "scale",
            "type": "string"
          },
          "memory": {
            "description": "Allocation of Memory (MiB) resources for Scale database. ONLY FOR DEVELOPMENT SERVER!",
            "default": 256,
            "minimum": 128,
            "type": "number"
          }
        }
      }
    }
}
